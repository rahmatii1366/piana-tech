swagger: '2.0'
info:
  description: This is a swagger config for Piana Tech Web Console
  version: 0.1.0
  title: Piana Tech Web Console
host: 'localhost:8080'
schemes:
  - http
paths:
  '/sample':
    get:
      tags:
        - sample
      summary: return a sample related to given id
      operationId: getSample
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/SampleDto'
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/sample/one':
    get:
      tags:
        - sample
      summary: return a sample related to given id
      operationId: getSampleOne
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/SampleDto'
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/guest-authentication/signup':
    post:
      tags:
        - guest-authentication
      summary: signup by mobile
      operationId: signup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: signupDto
          required: true
          schema:
            $ref: '#/definitions/SignupDto'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/TokenRequiredDto'
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/guest-authentication/login':
    post:
      tags:
        - guest-authentication
      summary: login by mobile
      operationId: login
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: loginDto
          required: true
          schema:
            $ref: '#/definitions/LoginDto'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/MeDto'
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/guest-authentication/forget-password':
    post:
      tags:
        - guest-authentication
      summary: remember password by mobile
      operationId: forgetPassword
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: loginDto
          required: true
          schema:
            $ref: '#/definitions/ForgetPasswordDto'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/TokenRequiredDto'
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/guest-authentication/verify-token':
    post:
      tags:
        - guest-authentication
      summary: verify mobile number
      operationId: verifyToken
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: verifyTokenDto
          required: true
          schema:
            $ref: '#/definitions/VerifyTokenDto'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/MeDto'
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/user-authentication/logout':
    post:
      tags:
        - user-authentication
      summary: logout by mobile
      operationId: logout
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation.
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/user-group/group':
    post:
      tags:
        - user-group
      summary: create a group
      operationId: createGroup
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: GroupDto
          required: true
          schema:
            $ref: '#/definitions/GroupDto'
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupDto'
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
    get:
      tags:
        - user-group
      summary: get group
      operationId: getGroup
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/GroupDto'
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/user-group/group/invite':
    post:
      tags:
        - user-group
      summary: invite to group
      operationId: inviteToGroup
      consumes:
        - application/json
      parameters:
        - in: body
          name: inviteDto
          required: true
          schema:
            $ref: '#/definitions/InviteDto'
      responses:
        '200':
          description: Successful operation.
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/user-group/group/inviters':
    get:
      tags:
        - user-group
      summary: get list of invited groups
      operationId: getInviterGroups
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/InviterListDto'
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/user-group/group/inviter/accept':
    post:
      tags:
        - user-group
      summary: accept invite request from group
      operationId: acceptInviteRequest
      consumes:
        - application/json
      parameters:
        - in: body
          name: inviteDto
          required: true
          schema:
            $ref: '#/definitions/InviterDto'
      responses:
        '200':
          description: Successful operation.
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
  '/guest-group/group/age-level':
    get:
      tags:
        - guest-group
      summary: get group age levels
      operationId: getAgeLevels
      produces:
        - application/json
      responses:
        '200':
          description: Successful operation.
          schema:
            $ref: '#/definitions/AllAgeLevelsDto'
        '500':
          description: Error occurred during execution of request.
          schema:
            $ref: '#/definitions/ErrorDto'
definitions:
  SampleDto:
    type: object
    properties:
      name:
        type: string
        example: Ali
      message:
        type: string
        example: Hi
    title: SampleDto
  MeDto:
    type: object
    properties:
      username:
        type: string
      email:
        type: string
      mobile:
        type: string
      role:
        $ref: '#/definitions/RoleEnum'
      rule:
        $ref: '#/definitions/RuleEnum'
  RoleEnum:
    type: string
    enum:
      - UNKNOWN
      - GUEST
      - USER
      - VERIFIED_MOBILE
      - VERIFIED
      - SUSPENDED
      - ADMIN
  RuleEnum:
    type: string
    enum:
      - FREE
      - REGISTER_EMAIL
      - VERIFY_EMAIL
      - REGISTER_MOBILE
      - VERIFY_MOBILE
  TokenTypeEnum:
    type: string
    enum:
      - MOBILE
      - PASSWORD
      - EMAIL
  TokenActionEnum:
    type: string
    enum:
      - SIGNUP
      - FORGET_PASSWORD
  MessageDto:
    type: object
    properties:
      timestamp:
        type: integer
        format: int64
      code:
        type: integer
        format: int64
      message:
        type: string
      path:
        type: string
  ErrorDto:
    type: object
    properties:
      timestamp:
        type: integer
        format: int64
      status:
        type: string
      error:
        type: string
      message:
        type: string
      path:
        type: string
  TokenRequiredDto:
    type: object
    properties:
      message:
        type: string
      tokenType:
        $ref: '#/definitions/TokenTypeEnum'
      tokenAction:
        $ref: '#/definitions/TokenActionEnum'
  SignupDto:
    type: object
    properties:
      username:
        type: string
      mobile:
        type: string
      password:
        type: string
  LoginDto:
    type: object
    properties:
      mobile:
        type: string
      password:
        type: string
  ForgetPasswordDto:
    type: object
    properties:
      mobile:
        type: string
      newPassword:
        type: string
  VerifyTokenDto:
    type: object
    properties:
      code:
        type: string
      tokenType:
        $ref: '#/definitions/TokenTypeEnum'
      tokenAction:
        $ref: '#/definitions/TokenActionEnum'
  AgeLevelEnum:
    type: string
    enum:
      - FREE
      - LESS_THAN_5
      - LESS_THAN_10
      - LESS_THAN_15
      - LESS_THAN_20
      - LESS_THAN_30
      - LESS_THAN_40
      - LESS_THAN_50
      - LESS_THAN_60
      - GREATER_THAN_60
  AgeLevelDto:
    type: object
    properties:
      title:
        type: string
      value:
        type: string
  AllAgeLevelsDto:
    type: array
    items:
      $ref: '#/definitions/AgeLevelDto'
  GroupDto:
    type: object
    properties:
      name:
        type: string
      adminName:
        type: string
      latitude:
        type: number
        format: double
      longitude:
        type: number
        format: double
      ageLevel:
        $ref: '#/definitions/AgeLevelDto'
  InviteDto:
    type: object
    properties:
      mobiles:
        type: array
        items:
          type: string
  InviterDto:
    type: object
    properties:
      groupId:
        type: integer
        format: int64
      groupName:
        type: string
      isSeen:
        type: boolean
  InviterListDto:
    type: object
    properties:
      inviters:
        type: array
        items:
          $ref: '#/definitions/InviterDto'