/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ir.piana.tech.api.service;

import ir.piana.tech.api.dto.ErrorDto;
import ir.piana.tech.api.dto.LoginDto;
import ir.piana.tech.api.dto.MeDto;
import ir.piana.tech.api.dto.SignupDto;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Optional;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-08-04T17:46:56.145+04:30")

@Api(value = "guest", description = "the guest API")
public interface GuestApi {

    GuestApiDelegate getDelegate();

    @ApiOperation(value = "return a user", nickname = "login", notes = "", response = MeDto.class, tags={ "guest", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation.", response = MeDto.class),
        @ApiResponse(code = 500, message = "Error occurred during execution of request.", response = ErrorDto.class) })
    @RequestMapping(value = "/guest/login",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<MeDto> login(@ApiParam(value = "" ,required=true )  @Valid @RequestBody LoginDto loginDto) {
        return getDelegate().login(loginDto);
    }


    @ApiOperation(value = "return a user", nickname = "signUp", notes = "", response = MeDto.class, tags={ "guest", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful operation.", response = MeDto.class),
        @ApiResponse(code = 500, message = "Error occurred during execution of request.", response = ErrorDto.class) })
    @RequestMapping(value = "/guest/signup",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    default ResponseEntity<MeDto> signUp(@ApiParam(value = "" ,required=true )  @Valid @RequestBody SignupDto argument) {
        return getDelegate().signUp(argument);
    }

}
